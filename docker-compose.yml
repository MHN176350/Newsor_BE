version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-newsor_db}
      POSTGRES_USER: ${DATABASE_USER:-newsor_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-newsor_password}
    ports:
      - "5433:5432"  # Changed to 5433 to avoid conflict with local PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-newsor_user} -d ${DATABASE_NAME:-newsor_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6380:6379"  # Changed to 6380 to avoid conflict with local Redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: unless-stopped
    ports:
      - "0.0.0.0:8000:8000"  # Bind to all interfaces for network access
    env_file:
      - .env
    environment:
      - DEBUG=True
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=newsor_db
      - DATABASE_USER=newsor_user
      - DATABASE_PASSWORD=newsor_password
      - REDIS_URL=redis://redis:6379/0
      - REDIS_CACHE_URL=redis://redis:6379/1
      - REDIS_WRITEBACK_URL=redis://redis:6379/2
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
      interval: 30s
      timeout: 10s
      retries: 3
